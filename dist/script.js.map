{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/lib/components/dropdown.js","webpack:///./src/js/lib/components/modal.js","webpack:///./src/js/lib/core.js","webpack:///./src/js/lib/lib.js","webpack:///./src/js/lib/modules/actions.js","webpack:///./src/js/lib/modules/attributes.js","webpack:///./src/js/lib/modules/classes.js","webpack:///./src/js/lib/modules/display.js","webpack:///./src/js/lib/modules/effects.js","webpack:///./src/js/lib/modules/handlers.js","webpack:///./src/js/main.js"],"names":["$","prototype","dropdown","i","length","id","getAttr","click","fadeToggle","modal","created","_calcScroll","div","document","createElement","style","width","height","overflowY","visibility","body","appendChild","scrollWidth","offsetWidth","clientWidth","remove","scroll","target","e","preventDefault","fadeIn","overflow","offsetHeight","documentElement","clientHeight","marginRight","closeElements","querySelectorAll","forEach","elem","fadeOut","querySelector","classList","contains","createModal","text","btns","add","setAttr","slice","buttons","j","count","btn","className","close","cb","settings","textContent","addEventListener","push","innerHTML","title","append","selector","init","tagName","Object","assign","window","html","content","eq","index","parent","parentNode","childs","children","findMyIndex","item","findIndex","find","numberOfItems","copy","counter","arr","objLength","keys","closest","siblings","numbersOfItems","name","value","hasAttribute","setAttribute","attrName","getAttribute","removeAttr","removeAttribute","toggleAttr","addClass","classes","removeClass","toggleClass","toggle","show","display","hide","animateOverTime","dur","fin","timeStart","_animateOverTime","time","timeElapsed","complection","Math","min","requestAnimationFrame","_fadeIn","opacity","ani","_fadeOut","getComputedStyle","on","eventName","callback","off","removeEventListener","handler","alert"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","import $ from '../core';\r\n/**\r\n * dropdown - \r\n */\r\n$.prototype.dropdown = function(){\r\n    for(let i = 0; i < this.length; i++){    \r\n        let id = $(this[i]).getAttr('id');\r\n\r\n        $(this[i]).click(()=>{\r\n            $(`[data-toggle-id=\"${id}\"]`).fadeToggle(300);\r\n        });\r\n    }\r\n};\r\n\r\n$('.dropdown-toggle').dropdown();","import $ from '../core';\r\n/**\r\n * методу Modal необходим триггер для вызова модального окна.\r\n * для этого понадобится атрибут data-toggle=\"modal\" что бы правильно инициализировать этот триггер,\r\n * data-ratget=\"#\" - необходим для указания, какое именно модальное окно нужно вызвать.\r\n * @param {boolean} - отвечает за то, создано ли модальное окно программно, или нет. необязательный парамет.\r\n * @example\r\n * <a href=\"#\" class=btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">Link to</a>\r\n */\r\n$.prototype.modal = function (created){\r\n    function _calcScroll(){\r\n        let div = document.createElement('div');\r\n\r\n        div.style.width = '50px';\r\n        div.style.height = '50px';\r\n        div.style.overflowY = 'scroll';\r\n        div.style.visibility = 'hidden';\r\n\r\n        document.body.appendChild(div);\r\n        let scrollWidth = div.offsetWidth - div.clientWidth;\r\n        div.remove();\r\n        \r\n        return scrollWidth;\r\n\r\n    }\r\n    let scroll =_calcScroll();\r\n\r\n    for(let i = 0; i < this.length; i++){\r\n        let target = $(this[i]).getAttr('data-target');\r\n        //target = #examplemodal\r\n\r\n        $(this[i]).click((e)=>{\r\n            e.preventDefault();\r\n            $(target).fadeIn(500);\r\n            \r\n            document.body.style.overflow = 'hidden';\r\n            if(document.body.offsetHeight > document.documentElement.clientHeight){\r\n                //если полоса прокрутки есть на странице, то добавляем отступ, иначе страница будет дергаться\r\n                document.body.style.marginRight =  `${scroll}px`;\r\n            }\r\n        });\r\n        let closeElements = document.querySelectorAll(`${target} [data-close]`);\r\n        closeElements.forEach(elem =>{\r\n            $(elem).click(() => {\r\n                $(target).fadeOut(500,()=>{\r\n                    //при закрытии модалки, убираем отступ и отображаем полосу прокрутки\r\n                    document.body.style.overflow = '';\r\n                    document.body.style.marginRight =  `0px`;\r\n                    if(created){\r\n                        document.querySelector(target).remove();\r\n                    }\r\n                });\r\n                \r\n                \r\n            });\r\n        });\r\n        $(target).click(e =>{\r\n            if(e.target.classList.contains('modal')){\r\n                $(target).fadeOut(500,()=>{\r\n                    //при закрытии модалки, убираем отступ и отображаем полосу прокрутки\r\n                    document.body.style.overflow = '';\r\n                    document.body.style.marginRight =  `0px`;\r\n                    if(created){\r\n                        document.querySelector(target).remove();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n$('[data-toggle=\"modal\"]').modal();\r\n\r\n/**\r\n * createModal это метод, который вызывается на определенных элементах,\r\n * и привязывает определенное модальное окно к этому триггеру.\r\n * Чаще всего createModal вызывается после того, как пользователь кликнул на какой то элемент.\r\n * @param {Object} {} - содержит в себе text{\r\n * text - содержит title для модального окна, и body - текст который будет расположен в модальном окне\r\n *  title: \"some text\",\r\n *  body:   \"some text\"\r\n * } и button {\r\n * содержит количество кнопок, которые мы хотим поместить и их настройки :\r\n * count: number,\r\n * settings:[\r\n *      [\r\n *          'text'- текст кнопки,\r\n *          ['',''] - массив содержащий классы стилей\r\n *          true/false - значение boolean - которая отвечает за то, будет ли кнопка закрывать модальное окно или нет\r\n *          ()=>{} - колбек функция при надобности\r\n *      ] \r\n * ]\r\n * }\r\n *  \r\n * @example\r\n * $('#trigger').click(()=>$('#trigger').createModal({\r\n    text: {\r\n        title: 'Modal title',\r\n        body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus, officiis. Provident reiciendis odio error et corrupti, pariatur adipisci eligendi magnam ullam sapiente fugit culpa laborum nulla rerum possimus sed asperiores?'\r\n    },\r\n    btns:{\r\n        count: 3,\r\n        settings:[\r\n            [\r\n                'close',    \r\n                ['btn-danger','mr-10'],\r\n                true\r\n            ],\r\n            [\r\n                'Save changes',\r\n                ['btn-success'],\r\n                false,\r\n                ()=>{\r\n                    alert('Данные сохранены');\r\n                }\r\n            ],\r\n            [\r\n                'another button',\r\n                ['btn-warning','ml-10'],\r\n                false,\r\n                ()=>{\r\n                    alert('Hello World');\r\n                }\r\n            ]\r\n        ]\r\n    }\r\n}));\r\n * \r\n */\r\n\r\n$.prototype.createModal = function({text , btns} = {}){\r\n    //создаем модальные окна при помощи js\r\n    for(let i = 0; i < this.length; i++){\r\n        let modal = document.createElement('div');\r\n        //modal - оболочка для модульного окна\r\n        modal.classList.add('modal');\r\n        $(modal).setAttr('id', $(this[i]).getAttr('data-target').slice(1)); //устанавливаем id, берем его из \r\n        //текущего перебераемого элемента, и вырезаем # т.к. он выглядит как #example\r\n\r\n        //btns = {count : num, settings: [[text, classNames=[],close,cb]]}\r\n        //обработка кнопок которые будут в модальном окне\r\n        let buttons = [];\r\n        //количество кнопок базирует на переданном атрибуте count \r\n        for(let j = 0; j < btns.count; j++ ){\r\n            let btn = document.createElement('button');\r\n            let [text,className,close,cb] = btns.settings[j];\r\n            //стилизируем кнопки, j - определяет какую кнопку мы сейчас настраиваем, classNames - это\r\n            //массив по этому можно использовать spread оператор для превращения его, в элементы для classList\r\n            btn.classList.add('btn', ...className);\r\n            //устанавливаем текст внутри этой кнопке, берем из переданных данных\r\n            btn.textContent = text;\r\n            //необходимо узнать будет ли эта кнопка закрывать модальное окно\r\n            if(close){\r\n                $(btn).setAttr('data-close','true');\r\n            }\r\n            if(btns.cb && typeof(cb) === 'function'){\r\n                btn.addEventListener('click', cb);\r\n            }\r\n            buttons.push(btn);\r\n        }\r\n\r\n        //наполняем модальное окно контентом, данные берем из переданных при вызове метода \r\n        modal.innerHTML = `\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <button class=\"close\" data-close>\r\n                        <span>&times;</span>\r\n                    </button>\r\n                    <div class=\"modal-header\">\r\n                        <div class=\"modal-title\">\r\n                            ${text.title}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ${text.body}\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        //т.к. в футер просто так массив вставить нельзя, можно перебрать массив превратить каждую ноду в текст,\r\n        //и вставить ее в качестве обычного html, этот метод выведет кнопки на экран, но потеряет коллбэк, ведь мы будем\r\n        //трансформировать ноду в страку, а там коллбэк ищезнет, по этому лучше использовать другой способ:\r\n        //используя метод append\r\n\r\n        modal.querySelector(\".modal-footer\").append(...buttons);//получаем футер на странице, и помещаем с помощью\r\n        //spread оператора кнопки\r\n        document.body.appendChild(modal);//помещаем modal на страницу\r\n        // исправление бага с кучей окон\r\n        $(this[i]).modal(true);//привязываем триггер к новосозданному модальному окну\r\n        $($(this[i]).getAttr('data-target')).fadeIn(500);//вызываем модальное окно на странице\r\n    }\r\n};","/**\r\n * \r\n * @param {selector} selector - css селектор \r\n * @returns {Object} - объект, содержащий найденную колекцию\r\n * @example \r\n * $('div');\r\n * //=> {0: div.container, 1: div.wrap length: 2}\r\n */\r\n\r\nconst $ = function (selector){\r\n    return new $.prototype.init(selector);\r\n};\r\n$.prototype.init = function(selector){\r\n    if(!selector){\r\n        return this; //{}\r\n    }\r\n    //Необходимо проверить не является ли selector html элементом, если он является нодой, \r\n    //то записываем эту ноду в объект\r\n    if(selector.tagName){\r\n        this[0] = selector;\r\n        this.length = 1;\r\n        return this;// что бы не выполнялся дальнейший код,который работает с псевдо массивами\r\n    }\r\n    // если передан css selector, то работаем с псевдо массивом\r\n    Object.assign(this,document.querySelectorAll(selector));\r\n    this.length = document.querySelectorAll(selector).length;\r\n    return this;\r\n};\r\n\r\n$.prototype.init.prototype = $.prototype;\r\n// записываем в прототип объекта который будет возвращаться из функции init прототип главной функции\r\n\r\nwindow.$ = $;\r\n\r\nexport default $;","/**\r\n * lib добавляет в функцию $ различные методы\r\n */\r\nimport $ from './core';\r\nimport './modules/display';\r\nimport './modules/classes';\r\nimport './modules/actions';\r\nimport './modules/attributes';\r\nimport './modules/handlers';\r\nimport './modules/effects';\r\nimport './components/dropdown';\r\nimport './components/modal';\r\n\r\n\r\n\r\nexport default $;\r\n","import $ from '../core';\r\n\r\n/**\r\n * Метод html - принимает в себя какой то content, который мы хотим поместить во внутрь элемента\r\n * имеет двойной функционал:\r\n * 1. если content передан, тогда мы замещаем контент\r\n * 2. иначе, получаем содержимое этого элемента на странице\r\n * @param {*} content \r\n * @returns Object или содержимое элемента на странице, если получено содержимое, то работать по цепочке,\r\n *  уже будет невозможно\r\n * @example\r\n * $('button').html());\r\n * //=> какой то текст из кнопки\r\n * \r\n * $('button').html('hello');\r\n * //=> {0: button, length: 1}\r\n */\r\n$.prototype.html = function(content){\r\n    for (let i = 0; i < this.length; i++){\r\n        if(content){\r\n            this[i].innerHTML = content;\r\n        }else{\r\n            return this[i].innerHTML;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Метод eq - получает определенный элемент по номеру.\r\n * @param {*} i - номер необходимого элемента из выборки, нумерация нач с 0\r\n * @returns Object\r\n * @example\r\n * $('div').eq(2).addClass('active');\r\n * //=> {}\r\n */\r\n$.prototype.eq = function(i){\r\n    return $(this[i]);\r\n    // let swap = this[i],\r\n    //     objLength = Object.keys(this).length;\r\n\r\n    \r\n    // for(let i = 0; i < objLength; i++){\r\n    //     delete this[i];\r\n    // }\r\n\r\n    // this[0] = swap;\r\n    // this.length = 1;\r\n    // return this;\r\n};\r\n\r\n/**\r\n * Метод index - используется на одном элементе. Получает номер элемента по\r\n * порядку, среди тех элементов, которые имеют общего родителя.\r\n * т.е. узнает какой элемент по порядку, среди своих сверстников, элементов \r\n * которые подходят по тому же селектору и имеют общего родителя\r\n * @returns {number}\r\n * @example\r\n * $(div).click(function(){\r\n *      console.log($(this).index());\r\n * })\r\n * //=> 2 - номер нажатого div по порядку\r\n */\r\n$.prototype.index = function(){\r\n    let parent = this[0].parentNode,\r\n        childs = [...parent.children];//превращаем псевдо массив в массив\r\n    //parent получает родителя\r\n    //childs - содержит всех детей родителя\r\n\r\n    let findMyIndex = (item) =>{\r\n        //в перебираемсых items ищем нужный нам\r\n        return item == this[0];\r\n    };\r\n\r\n    return childs.findIndex(findMyIndex);\r\n    //когда функция вернет true, то findIndex вернет номер этого эл-та \r\n\r\n};\r\n\r\n/**\r\n * Метод find - находит определенные элементы по селектору, внутри уже найденных\r\n * @param {*} selector \r\n * @returns Object - который сод. найд элементы по селектору\r\n * @example\r\n * $('div').eq(2).find('.active');\r\n * //=> {0: div.active, 1: div.active, length:2}\r\n */\r\n$.prototype.find = function(selector){\r\n    let numberOfItems = 0; //общее количество найденных элеменетов\r\n    let copy = Object.assign({},this);// что бы избежать багов делаем копию\r\n    let counter = 0; //количество новых записанных элементов в this\r\n\r\n    for (let i = 0; i < copy.length; i++){\r\n        let arr = copy[i].querySelectorAll(selector);\r\n        //если не одного элемента arr не найдено\r\n        if (arr.length == 0){\r\n            continue;\r\n        }\r\n        // если элементы найдены, то перезаписываем их в главный объект this\r\n        //начиная с 0\r\n        for(let j = 0; j < arr.length; j++){\r\n            this[counter] = arr[j];\r\n            counter++;\r\n        }\r\n\r\n        numberOfItems += arr.length;\r\n    }\r\n\r\n    this.length = numberOfItems; // Обновляем количество элементов в главном объекте\r\n\r\n    let objLength = Object.keys(this).length; //узнаем кол-во элементов в главном объекте\r\n\r\n    //Необходимо удалить свойства, которые не были перезаписаны\r\n    for(;numberOfItems < objLength; numberOfItems++){\r\n        delete this[numberOfItems];\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * метод closest - ищет ближайший родительский элемент (или сам элемент), \r\n * который соответствует заданному CSS-селектору, для всех элементов объекта из $() \r\n * @param {*} selector \r\n * @returns Object\r\n * @example\r\n * $('.some').closest('.find');\r\n * //=> {0: div.find, 1:div.find, length: 2}\r\n * \r\n * $('.some').closest('.findqw');\r\n * //=>{0: empty, 1: empty, length: 2}\r\n */\r\n$.prototype.closest = function(selector){\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.length; i++){\r\n        if(this[i].closest(selector) === null){\r\n            this[i] = 'empty';\r\n            counter++;\r\n        }else{\r\n            this[i] = this[i].closest(selector);\r\n            counter++;\r\n        }\r\n        \r\n    }\r\n\r\n    let objLength = Object.keys(this).length;\r\n    \r\n    for(;counter < objLength; counter++){\r\n        delete this[counter];\r\n    }\r\n    return this;\r\n\r\n};\r\n\r\n/**\r\n * Метод siblings - получает все соседние элементы, не включая сам элемент\r\n * @returns Object - содержащий все соседние элементы\r\n * @example \r\n * $('.some').eq(0).siblings());\r\n * //=> {0: div.some, 1: div.some length: 2}\r\n * \r\n * $('.find').siblings());\r\n * //=>{0: div, 2: div.active, length: 2};\r\n */\r\n$.prototype.siblings = function(){\r\n    let counter = 0,\r\n        numbersOfItems = 0,\r\n        copy = Object.assign({},this);\r\n\r\n    for(let i = 0; i < 1; i++){\r\n        // i < 1, для того что бы не дублировать соседей\r\n        let arr = copy[i].parentNode.children; // получаем всех детей родителя\r\n\r\n        for(let j = 0; j < arr.length; j++){\r\n            if(copy[i] === arr[j]){\r\n                continue;\r\n                //исключаем из выборки copy[i] элемент чьих соседей мы искали\r\n            }\r\n            this[counter] = arr[j];\r\n            counter++;\r\n        }\r\n        numbersOfItems += arr.length - 1;//- 1 т.к. мы убрали элемент из выборки\r\n    }\r\n\r\n    this.length = numbersOfItems;\r\n\r\n    let objLength = Object.keys(this).length;\r\n    for(;numbersOfItems < objLength;numbersOfItems++){\r\n        delete this[numbersOfItems];\r\n    }\r\n    return this;\r\n};","import $ from '../core';\r\n/**\r\n * Метод - setAttr устанавливает атрибут, каждому элементу из $()\r\n * @param {string} name \r\n * @param {*} value \r\n * @returns Object - с объектом можно работать дальше\r\n * @example \r\n * $('button').setAttr(\"disabled\", \"disabled\");\r\n * //=> {0: button, length: 1}\r\n */\r\n$.prototype.setAttr = function(name,value){\r\n    for(let i = 0; i < this.length; i++){\r\n        //если перебераемый элемент, имеет свойство hasAttribute, устанавливаем ему атрибут\r\n        if(this[i].hasAttribute){\r\n            this[i].setAttribute(name,value);\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * метод getAttr проверяет есть ли атрибут у элементов из $()\r\n * Подумать над этим методом!!!!!!!!!!!!!\r\n * @param {string} attrName \r\n * @returns {string} - id\r\n * @example \r\n * $('button').getAttr('disabled');\r\n * //=> disabled или null\r\n */\r\n\r\n$.prototype.getAttr = function(attrName){\r\n    //возвращает id для одного элемента\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].hasAttribute){\r\n            return this[i].getAttribute(attrName);\r\n        }\r\n    }\r\n};\r\n\r\n// $.prototype.getAttr = function(attrName){\r\n//     //возвращает объект с id если они имеются\r\n//     for(let i = 0; i < this.length; i++){\r\n//         if(this[i].hasAttribute){\r\n//             this[i] = this[i].getAttribute(attrName);\r\n//         }\r\n//     }\r\n//     return this;\r\n// };\r\n// результат для этого варианта//=> {0: null, 1: disabled, length: 2}\r\n\r\n/**\r\n * Метод removeAttr удаляет переданный в него атрибут из всех элементов ${}\r\n * @param {*} attrName \r\n * @returns Object с объектом можно работать дальше\r\n * @example\r\n * $('button').removeAttr('disabled');\r\n * //=>{0:button, 1:button, length: 2}\r\n */\r\n$.prototype.removeAttr = function (attrName){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].hasAttribute){\r\n            this[i].removeAttribute(attrName);\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Метод toggleAttr принимает имя атрибуда и его значение, и проверяет элементы объекта $(), если они уже содержат \r\n * переданный атрибут, то удаляет его, если нет, то добавляет\r\n * @param {*} attrName \r\n * @param {*} value \r\n * @returns Object - c которым можно работать дальше\r\n * @example\r\n * $('button').toggleAttr('disabled','disabled');\r\n * //{0:button, 1:button, length: 2}\r\n */\r\n//toggle с уст. значения value\r\n$.prototype.toggleAttr = function (attrName,value){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].hasAttribute){\r\n            if(this[i].hasAttribute(attrName)){\r\n                this[i].removeAttribute(attrName);\r\n            }else{\r\n                this[i].setAttribute(attrName,value);\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n//toggle without value\r\n// $.prototype.toggleAttr = function (attrName){\r\n//     for(let i = 0; i < this.length; i++){\r\n//         if(this[i].toggleAttribute){\r\n//             this[i].toggleAttribute(attrName);\r\n//         }\r\n//     }\r\n//     return this;\r\n// };\r\n\r\n","import $ from '../core';\r\n\r\n/**\r\n * Метод addClass добавляет классы к элементам из $()\r\n * @param  {...any} classes \r\n * @returns Object - с уже добавленными классами к элементам \r\n * @example\r\n * $('.btn').addClass('red','blue','green');\r\n * //=>{0:button.btn.red.blue.green, length: 1}\r\n */\r\n$.prototype.addClass = function(...classes){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].classList){\r\n            this[i].classList.add(...classes);\r\n        }   \r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Метод - removeClass удаляет классы у элементов из $()\r\n * @param  {...any} classes \r\n * @returns Object - с элементами, без удаленных классов\r\n * @example\r\n * $('.btn').removeClass('red','blue','green');\r\n * //=>{0:button.btn, length: 1}\r\n */\r\n$.prototype.removeClass = function(...classes){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].classList){\r\n            this[i].classList.remove(...classes);\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Метод toggleClass проверяет, если переданный класс у элемента присутствует,\r\n * то удаляет его, иначе добавляет\r\n * @param {*} classes \r\n * @returns Object - c элементами, без удаленных или с добавленными классами\r\n * @example\r\n * $('.btn-dark').toggleClass('red');\r\n * //=> {0:button.btn.red, length: 1}\r\n * или, если класс уже был\r\n * //=> {0:button.btn, length: 1}\r\n */\r\n$.prototype.toggleClass = function(classes){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(this[i].classList){\r\n            this[i].classList.toggle(classes);\r\n        }\r\n    }\r\n    return this;\r\n};","import $ from '../core';\r\n\r\n/**\r\n * show - метод, который перебирает элементы в $() и отображает их на экране\r\n * \r\n */\r\n$.prototype.show = function(){\r\n    for(let i = 0; i < this.length; i++){\r\n        //если, у элемента, нету свойства style, то пропускаем итерацию\r\n        if (!this[i].style){\r\n            continue;\r\n        }else{\r\n            this[i].style.display = '';\r\n        }\r\n    }\r\n    //возвращаем this, чтобы с этим объектом, можно было работать дальше по цепочке chaining\r\n    return this;\r\n};\r\n\r\n/**\r\n * hide - метод, который перебирает элементы в $() и скрывает их.\r\n */\r\n$.prototype.hide = function(){\r\n    for(let i = 0; i < this.length; i++){\r\n        if (!this[i].style){\r\n            continue;\r\n        }else{\r\n            this[i].style.display = 'none';\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * toggle - метод, переключающий состояние элемента, из скрытого в отображаемый и наоборот\r\n */\r\n$.prototype.toggle = function(){\r\n    for(let i = 0; i < this.length; i++){\r\n        if (!this[i].style){\r\n            continue;\r\n        }\r\n\r\n        if(this[i].style.display ==='none'){\r\n            this[i].style.display ='';\r\n        }else{\r\n            this[i].style.display ='none';\r\n        }\r\n    }\r\n    return this;\r\n};","import $ from '../core';\r\n/**\r\n * метод animateOverTime - техническая функция,отвечающая за анимацию\r\n * @param {number} dur - как долго будет выполнятся анимация\r\n * @param {function} cb -коллбэк функция, необязательный параметр\r\n * @param {*} fin - функция которая запускается после того как анимация закончилась\r\n * необязательный параметр\r\n * @returns {function} _animateOverTime;\r\n */\r\n$.prototype.animateOverTime = function(dur,cb,fin){\r\n    let timeStart;\r\n    // алгоритм работы requestAnimationFrame необх создать функцию, которая будет запускаться\r\n    //до определенного условия, если условие не выполняется, анимация прекращается,\r\n    //вычисляем начало анимации, и сравниваем с временем переданным как аргумент\r\n\r\n    function _animateOverTime(time){\r\n        //_animateOverTime - техническая функция для requestAnimationFrame\r\n        if(!timeStart){\r\n            timeStart = time;\r\n        }   \r\n\r\n        let timeElapsed = time - timeStart; // вычисляем сколько времени прошлоб(прогресс)\r\n        let complection = Math.min(timeElapsed/dur,1);//отвечает за изменение параметров на странице\r\n\r\n        cb(complection);//вызываем коллбэк\r\n\r\n        if(timeElapsed < dur){\r\n            requestAnimationFrame(_animateOverTime);\r\n        }else{\r\n            if(typeof fin === 'function'){\r\n                fin();\r\n            }   \r\n        }\r\n    }\r\n    return _animateOverTime;\r\n};\r\n\r\n/**\r\n * метод fadeIn - добавляет элементам эффект появления\r\n * @param {*} dur  - обязательный аргумент, время\r\n * @param {*} display \r\n * @param {*} fin \r\n * @return Object\r\n * @example\r\n * $('.butt').fadeIn(2000);\r\n * //=> {0: button.butt, length : 1};\r\n */\r\n$.prototype.fadeIn = function(dur,display = 'block',fin){\r\n    for(let i = 0; i < this.length; i++){\r\n        //нужно убедится, что элемент показан на странице\r\n        this[i].style.display = display;\r\n\r\n        let _fadeIn = (complection) =>{\r\n            //техническая функция, при запуске принимает complection\r\n            //и изменяет opacity от 0 до 1\r\n            this[i].style.opacity = complection;\r\n        };\r\n\r\n        let ani = this.animateOverTime(dur,_fadeIn,fin);\r\n        requestAnimationFrame(ani);\r\n    \r\n    }\r\n    return this;\r\n};  \r\n\r\n/**\r\n * метод fadeOut - добавляет элементам эффект исчезновения \r\n * @param {*} dur \r\n * @param {*} fin \r\n * @return Object\r\n * @example\r\n * $('.butt').fadeOut(2000);\r\n * //=> {0: button.butt, length : 1};\r\n */\r\n$.prototype.fadeOut = function (dur,fin){\r\n    for(let i = 0; i < this.length; i++){\r\n\r\n        let _fadeOut = (complection) =>{\r\n            this[i].style.opacity = 1 - complection;//уменьшаем opacity\r\n            if(complection === 1){\r\n                //если opacity - 0, скрываем элемент со страницы\r\n                this[i].style.display = 'none';\r\n            }\r\n        };\r\n\r\n        let ani = this.animateOverTime(dur,_fadeOut,fin);\r\n        requestAnimationFrame(ani);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * метод fadeToggle - определяет, нам нужно показать или скрыть элемент, и делает это.\r\n * @param {*} dur - обязательный параметр\r\n * @param {*} display \r\n * @param {*} fin \r\n * @returns Object\r\n * @example\r\n * $('.active').fadeToggle(1800);\r\n * //=> {0: button.active, 1: button.active, length: 2}\r\n * \r\n * $('.btn-dark').on('click',function(){\r\n *  $(this).fadeToggle(1000);\r\n * });\r\n * //=> {0: button.btn-dark, length: 1}\r\n */\r\n$.prototype.fadeToggle = function(dur,display,fin){\r\n    for(let i = 0; i < this.length; i++){\r\n        //сейчас мы не можем на прямую проверить инлайн стили,т.к. в верстке обычно используются\r\n        //не инлайн стили,а стили прописаные в css. По этому можно использовать getComputedStyle\r\n        if(window.getComputedStyle(this[i]).display ==='none'){\r\n            $(this[i]).fadeIn(dur,display,fin);\r\n        }else{\r\n            $(this[i]).fadeOut(dur,fin);\r\n        }\r\n        }\r\n    return this;\r\n};","import $ from '../core';\r\n/**\r\n * Метод on - добавляет обработчики событий к элементам в $(), принимает в себя название события и callback-функцию\r\n * @param {*} eventName \r\n * @param {*} callback \r\n * @returns Object \r\n * @example\r\n * $('.btn-dark').on('click',()=>{\r\n *   alert('click');\r\n * });\r\n * //=> {0:button.btn-dark, length: 1}\r\n * или \r\n * $('button').on('click', function(){\r\n *      $(this).toggleClass('active');\r\n * //this кнопка на которую нажали\r\n * //метод toggleClass не может работать с обычной кнопкой, ему нужен объект из $()\r\n * })\r\n * \r\n */\r\n$.prototype.on = function(eventName,callback){\r\n    //методу необходимо два аргумента\r\n    if(!eventName || !callback){\r\n        return this;\r\n    }\r\n    for(let i = 0; i < this.length; i++){\r\n        this[i].addEventListener(eventName,callback);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Метод off - убирает обработчик события с элементов, что бы убрать событие,\r\n *  в него нужно передать строго то же самое событие\r\n * @param {*} eventName \r\n * @param {*} callback \r\n * @returns Object\r\n * @example\r\n * $('.btn-dark').on('click',sayHello);\r\n * function sayHello(){alert('Hello')}\r\n * $('.btn-dark').off('click',sayHello);\r\n * функция передаётся одна и таже, по этому мы сможем убрать обработчик\r\n * //=> {0:button.btn-dark, length: 1}\r\n */\r\n\r\n$.prototype.off = function(eventName,callback){\r\n    //методу необходимо два аргумента\r\n    if(!eventName || !callback){\r\n        return this;\r\n    }\r\n    for(let i = 0; i < this.length; i++){\r\n        this[i].removeEventListener(eventName,callback);\r\n    }\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Метод click - имеет двойной функционал:\r\n * 1.когда обработчик был передан, тогда на элемент навешивается событие клика\r\n * с выполнением переданной функции\r\n * 2.когда метод используется без передачи аргументов, \r\n * тогда будет произведен клик по этому элементу\r\n * @param {*} handler\r\n * @returns Object\r\n * @example \r\n * function sayHello(){alert('Hello')}\r\n * $('.btn-dark').click(sayHello);\r\n * или\r\n * $('.btn-dark').click(()=>{console.log('hello')});\r\n * результат:\r\n * //=>{0:button.btn-dark, length: 1}\r\n */\r\n$.prototype.click = function(handler){\r\n    for(let i = 0; i < this.length; i++){\r\n        if(handler){\r\n            this[i].addEventListener('click',handler);\r\n        }else{\r\n            this[i].click();\r\n        }\r\n    }\r\n    return this;\r\n};","import './lib/lib';\r\nimport $ from './lib/lib';\r\n\r\n\r\n\r\n$('.wrap').html(\r\n    `\r\n    <div class=\"dropdown\">\r\n        <button class=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuButton\">Dropdown</button>\r\n        <div class=\"dropdown-menu\" data-toggle-id=\"dropdownMenuButton\">\r\n            <a href=\"#\" class=\"dropdown-item\">Action</a>\r\n            <a href=\"#\" class=\"dropdown-item\">Action#2</a>\r\n            <a href=\"#\" class=\"dropdown-item\">Action#3</a>\r\n        </div>\r\n    </div>\r\n    `\r\n);\r\n\r\n$('.dropdown-toggle').dropdown();\r\n\r\n$('#trigger').click(()=>$('#trigger').createModal({\r\n    text: {\r\n        title: 'Modal title',\r\n        body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus, officiis. Provident reiciendis odio error et corrupti, pariatur adipisci eligendi magnam ullam sapiente fugit culpa laborum nulla rerum possimus sed asperiores?'\r\n    },\r\n    btns:{\r\n        count: 3,\r\n        settings:[\r\n            [\r\n                'close',    \r\n                ['btn-danger','mr-10'],\r\n                true\r\n            ],\r\n            [\r\n                'Save changes',\r\n                ['btn-success'],\r\n                false,\r\n                ()=>{\r\n                    alert('Данные сохранены');\r\n                }\r\n            ],\r\n            [\r\n                'another button',\r\n                ['btn-warning','ml-10'],\r\n                false,\r\n                ()=>{\r\n                    alert('Hello World');\r\n                }\r\n            ]\r\n        ]\r\n    }\r\n}));\r\n\r\n{/* <button class=\"btn btn-danger\" data-close>Close</button> */}\r\n{/* <button class=\"btn btn-success\">Save changes</button> */}\r\n\r\n// console.log($('.btn-dark').on('click',()=>{\r\n//     console.log(this);\r\n//     $(this).fadeToggle(1000);\r\n// }));\r\n \r\n\r\n\r\n// $('#first').on('click',()=>{\r\n//     $('div').eq(1).fadeToggle(800);\r\n// });\r\n\r\n// $('[data-count=\"second\"]').on('click',()=>{\r\n//     $('div').eq(2).fadeToggle(800);\r\n// });\r\n// $('button').eq(2).on('click',()=>{\r\n//     $('.w-500').fadeToggle(800);\r\n// });\r\n\r\n\r\n\r\n// $('button').on('click', function(){\r\n//     $('div').eq(1).toggleClass('active');\r\n// });\r\n\r\n// $('img').setAttr('src','qweqweqe');\r\n\r\n// $('img').on('click',function(){\r\n//     $(this).toggleAttr('src','Den');\r\n// });\r\n\r\n// $('div').click(function(){\r\n//     console.log($(this).index());\r\n// });\r\n\r\n// console.log($('div').find('.more'));\r\n// console.log($('.some').closest('.findmeq').addClass('qweqw'));\r\n// console.log($('.some').siblings()); - рассмотреть вариант когда искомый объект не один на странице\r\n// console.log($('.some').siblings());\r\n\r\n// $('.findme').fadeOut(1800); //анимация исчезновения\r\n// setTimeout(()=>{$('.findme').fadeIn(1800);},2000);// анимация появления"],"sourceRoot":""}